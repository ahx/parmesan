- title: No schema defined
  tests:
    - request:
        url: '/pets?id=abc'
      expected_value: 'abc'
      parameter:
        in: query
        name: id
- title: No schema type defined
  tests:
    - request:
        url: '/pets?id=abc'
      expected_value: 'abc'
      parameter:
        in: query
        name: id
      schema: {}
- title: Simple string parameter
  tests:
    - request:
        url: '/pets?id=abc'
      expected_value: 'abc'
      parameter:
        in: query
        name: id
        schema:
          type: string
    - request:
        url: '/pets?pet-id=abc'
      expected_value: 'abc'
      parameter:
        in: query
        name: pet-id
        schema:
          type: string
    - request:
        url: '/pets?filter[name]=abc'
      expected_value: 'abc'
      focus: true
      parameter:
        in: query
        name: filter[name]
        schema:
          type: string
    - request:
        url: '/pets?x[[]abc]=abc'
      expected_value: 'abc'
      focus: true
      parameter:
        in: query
        name: 'x[[]abc]'
        schema:
          type: string
- title: Integer parameter
  tests:
    - request:
        url: '/pets?id=1'
      expected_value: 1
      parameter:
        in: query
        name: id
        schema:
          type: integer
    - request:
        url: '/pets?id=12'
      expected_value: 12
      parameter:
        in: query
        name: id
        schema:
          type: integer
- title: Number parameter
  tests:
    - request:
        url: '/pets?id=2.99792458e8'
      expected_value: 299792458.0
      parameter:
        in: query
        name: id
        schema:
          type: number
    - request:
        url: '/pets?id=1.3'
      expected_value: 1.3
      parameter:
        in: query
        name: id
        schema:
          type: number
- title: Array explode true
  tests:
    - request:
        url: '/pets?name=a&name=b&name=c'
      expected_value: ['a', 'b', 'c']
      parameter:
        in: query
        name: name
        # explode: true # true is the default if style is 'form'
        # style: 'form' # 'form' is the default for query parameters
        schema:
          type: array
          items:
            type: string
    - request:
        url: '/pets?name=a&name=b&name=c'
      expected_value: ['a', 'b', 'c']
      parameter:
        in: query
        name: name
        explode: true
        style: 'form'
        schema:
          type: array
          items:
            type: string
- title: Array explode false
  tests:
    - request:
        url: '/pets?name=a,b,c'
      expected_value: ['a', 'b', 'c']
      parameter:
        in: query
        name: name
        explode: false
        # style: 'form' # 'form' is the default for query parameters
        schema:
          type: array
          items:
            type: string
    - request:
        url: '/pets?name=a,b,c'
      expected_value: ['a', 'b', 'c']
      parameter:
        in: query
        name: name
        explode: false
        style: 'form'
        schema:
          type: array
          items:
            type: string
    - request:
        url: '/pets?name=a%20b%20c'
      expected_value: ['a', 'b', 'c']
      parameter:
        in: query
        name: name
        explode: false
        style: 'spaceDelimited'
        schema:
          type: array
          items:
            type: string
    - request:
        url: '/pets?name=a%7Cb%7Cc'
      expected_value: ['a', 'b', 'c']
      parameter:
        in: query
        name: name
        explode: false
        style: 'pipeDelimited'
        schema:
          type: array
          items:
            type: string
- title: Object explode true
  tests:
    - request:
        url: '/pets?color[R]=100&color[G]=200&color[B]=150'
      expected_value: { 'R': 100, 'G': 200, 'B': 150 }
      parameter:
        in: query
        name: color
        explode: true
        style: 'deepObject'
        schema:
          type: object
          items:
            type: integer
- title: Object explode false
  tests:
    - request:
        url: '/pets?color=R,100,G,200,B,150'
      expected_value: { 'R': 100, 'G': 200, 'B': 150 }
      parameter:
        in: query
        name: name
        explode: false
        style: 'form'
        schema:
          type: object
          items:
            type: integer
